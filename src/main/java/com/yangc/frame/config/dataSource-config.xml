<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- 设置读取属性文件的加载器 -->
	<bean id="propertyCpmfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="initialSize" value="${database.initialSize}" />
		<property name="maxActive" value="${database.maxActive}" />
		<property name="minIdle" value="${database.minIdle}" />
		<property name="maxWait" value="${database.maxWait}" />
		<property name="poolPreparedStatements" value="${database.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${database.maxPoolPreparedStatementPerConnectionSize}" />
		<property name="validationQuery" value="${database.validationQuery}" />
		<property name="testOnBorrow" value="${database.testOnBorrow}" />
		<property name="testOnReturn" value="${database.testOnReturn}" />
		<property name="testWhileIdle" value="${database.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${database.timeBetweenEvictionRunsMillis}" />
		<property name="filters" value="${database.filters}" />
	</bean>

	<!-- hibernate拦截器 -->
	<bean id="hibernateInterceptor" class="com.yangc.interceptor.HibernateInterceptor" />

	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> -->
	<bean id="sessionFactory" class="com.yangc.bean.SessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.connection.SetBigStringTryClob">true</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">25</prop>
				<!-- 
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
	            <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
	             -->
			</props>
		</property>
		<!-- 指定hibernate映射文件存放的目录 -->
		<property name="mappingDirectoryLocations">
			<list>
				<!-- <value>classpath:com/*/*/bean/oracle</value> -->
				<!-- <value>classpath:com/*/*/bean/mysql</value> -->
				<value>classpath:com/*/*/bean</value>
			</list>
		</property>
		<!-- 指定hibernate映射文件存放的jar包 -->
		<property name="mappingJarLocations">
			<list>
				<value>WEB-INF/lib/*bean*.jar</value>
			</list>
		</property>
		<property name="entityInterceptor" ref="hibernateInterceptor" />
	</bean>
</beans>
